<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.ButtonTemplate}"
                     TargetType="Button">
        <i:ContentControlX x:Name="CcMain"
                           Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                           Icon="{Binding Path=(local:ButtonHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           IconPlacement="{Binding Path=(local:ButtonHelper.IconPlacement), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Padding="{TemplateBinding Padding}"
                           CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Content="{TemplateBinding Content}"
                           ContentTemplate="{TemplateBinding ContentTemplate}"
                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                           ContentStringFormat="{TemplateBinding ContentStringFormat}" />
        <ControlTemplate.Triggers>
            <Trigger Property="local:ButtonHelper.IsPending"
                     Value="True">
                <Setter TargetName="CcMain"
                        Property="Icon"
                        Value="{x:Null}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ButtonHelper.ClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Background"
                        Value="{Binding Path=(local:ButtonHelper.ClickBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ButtonHelper.ClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:ButtonHelper.ClickBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ButtonHelper.ClickForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="local:IconHelper.Foreground"
                        Value="{Binding Path=(local:ButtonHelper.ClickForeground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                <Setter TargetName="CcMain"
                        Property="Foreground"
                        Value="{Binding Path=(local:ButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ButtonHelper.ClickEffect"
                               Value="Sink" />
                    <Condition Property="IsPressed"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Margin"
                        Value="0,1,0,-1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ButtonHelper.ClickEffect"
                               Value="Shake" />
                    <Condition Property="IsPressed"
                               Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="CcMain"
                                                Storyboard.TargetProperty="Margin"
                                                To="3,0,-3,0"
                                                Duration="0:0:0.1">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseIn" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation Storyboard.TargetName="CcMain"
                                                Storyboard.TargetProperty="Margin"
                                                To="-3,0,3,0"
                                                BeginTime="0:0:0.1"
                                                Duration="0:0:0.1" />
                            <ThicknessAnimation Storyboard.TargetName="CcMain"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                BeginTime="0:0:0.2"
                                                Duration="0:0:0.1">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>

